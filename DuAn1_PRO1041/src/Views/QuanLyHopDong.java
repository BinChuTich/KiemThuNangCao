/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DomainModel.HopDong;
import DomainModel.HopDongTaiSan;
import DomainModel.KhachHang;
import DomainModel.PhongTro;
import DomainModel.TaiSan;
import Services.IHopDongService;
import Services.Impl.HopDongServiceImpl;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Utilities.Support;
import java.util.ArrayList;

/**
 *
 * @author PC ASUS
 */
public class QuanLyHopDong extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private IHopDongService service;
    private List<HopDong> lists;
    private List<KhachHang> listKH;
    private List<PhongTro> listPT;
    private List<TaiSan> listTS;
    private List<HopDongTaiSan> listHDTS;
    private List<String> listMa;

    /**
     * Creates new form QuanLyHopDong
     */
    public QuanLyHopDong() {
        initComponents();
        dtm = new DefaultTableModel();

        service = new HopDongServiceImpl();

        lists = service.getAll();
        listKH = service.getListKH();
        listPT = service.getListPT();
        listTS = service.getListTS();
        listHDTS = new ArrayList<>();
        listMa = service.getListMa();

        dtm = (DefaultTableModel) tblListHD.getModel();
        showDataTableHD(lists);

        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(listHDTS);
        dtm = (DefaultTableModel) tblListKH.getModel();
        showDataTableKH(listKH);
        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);
        dtm = (DefaultTableModel) tblListTS.getModel();
        showDataTableTS(listTS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgGioiTinh = new javax.swing.ButtonGroup();
        bgSearch = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtDongTien = new javax.swing.JTextField();
        txtTienCoc = new javax.swing.JTextField();
        txtLoaiPhong = new javax.swing.JTextField();
        txtPhong = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtNgSinh = new javax.swing.JTextField();
        txtMaHD = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        txtGiaDien = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtCCCD = new javax.swing.JTextField();
        dcNgTao = new com.toedter.calendar.JDateChooser();
        dcNgKT = new com.toedter.calendar.JDateChooser();
        txtTang = new javax.swing.JTextField();
        txtDienTich = new javax.swing.JTextField();
        txtGiaPhong = new javax.swing.JTextField();
        txtGiaNuoc = new javax.swing.JTextField();
        btnTaoHD = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblListHDTS = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListKH = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListPT = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListTS = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblListHD = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        rdoTatCa = new javax.swing.JRadioButton();
        rdoConHan = new javax.swing.JRadioButton();
        rdoHetHan = new javax.swing.JRadioButton();
        rdoSapHH = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Hợp Đồng");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hợp đồng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setText("Mã Hợp Đồng");

        jLabel2.setText("Tên Khách Hàng");

        jLabel3.setText("Ngày Sinh");

        jLabel4.setText("SĐT");

        jLabel5.setText("Email");

        jLabel6.setText("Địa Chỉ");

        jLabel7.setText("Phòng");

        jLabel8.setText("Loại Phòng");

        jLabel9.setText("Tầng");

        jLabel10.setText("Giới Tính");

        jLabel11.setText("CCCD");

        jLabel12.setText("Diện Tích");

        jLabel13.setText("Giá Phòng");

        jLabel14.setText("Tiền Cọc");

        jLabel15.setText("Ngày Tạo");

        jLabel16.setText("Ngày Kết Thúc");

        jLabel17.setText("Giá điện");

        jLabel18.setText("Giá nước");

        jLabel19.setText("Đóng tiền phòng");

        txtLoaiPhong.setEnabled(false);

        txtPhong.setEnabled(false);

        bgGioiTinh.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        bgGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");

        txtTang.setEnabled(false);

        txtDienTich.setEnabled(false);

        btnTaoHD.setText("Tạo Hợp Đồng");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel20.setText("Tháng / lần");

        tblListHDTS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên Tài Sản", "Số Lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblListHDTS);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtGiaDien, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtDongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel20))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnTaoHD)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapNhat)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi))
                    .addComponent(jLabel1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcNgKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcNgTao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNam)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNu))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(26, 26, 26)
                                        .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12)))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDienTich, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTang, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGiaNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtDiaChi)
                            .addComponent(txtEmail)
                            .addComponent(txtTenKH)
                            .addComponent(txtMaHD)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(txtNgSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDienTich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtDongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtGiaDien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(dcNgTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(dcNgKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoHD)
                    .addComponent(btnCapNhat)
                    .addComponent(btnLamMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng & Phòng & Thiết bị", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        tblListKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "CCCD", "Ngày Sinh", "Email", "SĐT", "Giới Tính", "Địa Chỉ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListKHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListKH);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel21.setText("Danh sách khách hàng");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel22.setText("Danh sách phòng trống");

        tblListPT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Loại Phòng", "Tầng", "Trạng Thái", "Mô Tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListPT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListPTMouseClicked(evt);
            }
        });
        tblListPT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblListPTKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblListPT);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel23.setText("Danh sách tài sản");

        tblListTS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã TS", "Tên TS", "Giá", "Số Lượng Tồn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListTSMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblListTS);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hợp đồng", jPanel1);

        tblListHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HD", "Tên KH", "Phòng", "Giá Phòng", "Tiền Cọc", "Ngày Tạo", "Ngày Kết Thúc", "Trạng Thái"
            }
        ));
        tblListHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListHDMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblListHD);

        jLabel24.setText("Nhập tên khách hàng cần tìm:");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        bgSearch.add(rdoTatCa);
        rdoTatCa.setSelected(true);
        rdoTatCa.setText("Tất cả");
        rdoTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTatCaActionPerformed(evt);
            }
        });

        bgSearch.add(rdoConHan);
        rdoConHan.setText("Còn hạn");
        rdoConHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoConHanActionPerformed(evt);
            }
        });

        bgSearch.add(rdoHetHan);
        rdoHetHan.setText("Hết hạn");
        rdoHetHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHetHanActionPerformed(evt);
            }
        });

        bgSearch.add(rdoSapHH);
        rdoSapHH.setText("Sắp hết hạn");
        rdoSapHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSapHHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(rdoTatCa)
                        .addGap(18, 18, 18)
                        .addComponent(rdoConHan)
                        .addGap(18, 18, 18)
                        .addComponent(rdoHetHan)
                        .addGap(18, 18, 18)
                        .addComponent(rdoSapHH)
                        .addGap(0, 412, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoTatCa)
                    .addComponent(rdoConHan)
                    .addComponent(rdoHetHan)
                    .addComponent(rdoSapHH))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Danh sách", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblListKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListKHMouseClicked
        // TODO add your handling code here:
        detailKH(tblListKH.getSelectedRow());
        listHDTS.removeAll(listHDTS);
        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(listHDTS);
    }//GEN-LAST:event_tblListKHMouseClicked

    private void tblListPTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblListPTKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblListPTKeyPressed

    private void tblListPTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListPTMouseClicked
        // TODO add your handling code here:
        detailPT(tblListPT.getSelectedRow());
        listHDTS.removeAll(listHDTS);
        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(listHDTS);
    }//GEN-LAST:event_tblListPTMouseClicked

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        // TODO add your handling code here:
        String sdt = txtSDT.getText().trim();
        listKH = service.getListKH();
        int dem = 0;
        for (KhachHang kh : listKH) {
            if (sdt.equalsIgnoreCase(kh.getSdt())) {
                dem++;
                if (checkData()) {
                    if (checkPhong()) {
                        if (checkMa()) {
                            HopDong hd = getDataFromView();
                            service.add(hd);
                            for (HopDongTaiSan hdts : listHDTS) {
                                hdts.setIdHD(hd.getId());
                                service.addHDTS(hdts);
                            }
                            listHDTS.removeAll(listHDTS);
                            dtm = (DefaultTableModel) tblListHDTS.getModel();
                            showDataTableHDTS(listHDTS);
                            showDataAll();
                        }
                    }
                }
            }
        }
        if (dem == 0) {
            if (checkDataKH()) {
                if (checkSDT(txtSDT.getText().trim()) && checkCCCD(txtCCCD.getText().trim()) && checkEmail(txtEmail.getText().trim())) {
                    KhachHang kh = getDataKHFromView();
                    service.addKH(kh);
                    if (checkData()) {
                        if (checkMa()) {
                            HopDong hd = getDataFromView();
                            service.add(hd);
                            for (HopDongTaiSan hdts : listHDTS) {
                                hdts.setIdHD(hd.getId());
                                service.addHDTS(hdts);
                            }
                            listHDTS.removeAll(listHDTS);
                            dtm = (DefaultTableModel) tblListHDTS.getModel();
                            showDataTableHDTS(listHDTS);
                            showDataAll();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        int index = tblListHD.getSelectedRow();
        if (index >= 0) {
            lists = service.getAll();
            String idPT = lists.get(index).getIdPhongTro();
            String idKH = lists.get(index).getIdKH();
            int dongTien = lists.get(index).getThoiGianNopTien();
            String id = lists.get(index).getId();
            String ma = lists.get(index).getMa();
            HopDong hd = getDataFromView();
            if (!idKH.equalsIgnoreCase(hd.getIdKH())) {
                JOptionPane.showMessageDialog(this, "Không thể thay đổi thông tin Khách hàng!");
                return;
            } else if (!idPT.equalsIgnoreCase(hd.getIdPhongTro())) {
                JOptionPane.showMessageDialog(this, "Không thể thay đổi thông tin Phòng!");
                return;
            } else if (dongTien != hd.getThoiGianNopTien()) {
                JOptionPane.showMessageDialog(this, "Không thể thay đổi Thời gian đóng tiền!");
                return;
            } else {
                if (ma.equalsIgnoreCase(hd.getMa())) {
                    if (checkData()) {
                        service.update(hd, id);
                        showDataAll();
                    }
                } else {
                    if (checkData()) {
                        service.update(hd, id);
                        showDataAll();
                    }
                }
            }

        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!");
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void tblListHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListHDMouseClicked
        // TODO add your handling code here:
        detailHD(tblListHD.getSelectedRow());
        lists = service.getAll();
        String idHD = lists.get(tblListHD.getSelectedRow()).getId();
        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(service.getListHDTSByIdHD(idHD));
    }//GEN-LAST:event_tblListHDMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtMaHD.setText("");
        txtTenKH.setText("");
        txtNgSinh.setText("");
        rdoNam.setSelected(true);

        txtSDT.setText("");
        txtCCCD.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");

        txtPhong.setText("");
        txtTang.setText("");
        txtLoaiPhong.setText("");
        txtDienTich.setText("");
        txtGiaPhong.setText("");

        txtTienCoc.setText("");
        txtGiaPhong.setText("");
        txtDongTien.setText("");
        txtGiaDien.setText("");
        txtGiaNuoc.setText("");
        dcNgTao.setDate(null);
        dcNgKT.setDate(null);

        showDataAll();
        listHDTS.removeAll(listHDTS);
        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(listHDTS);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void rdoTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTatCaActionPerformed
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoTatCaActionPerformed

    private void rdoConHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoConHanActionPerformed
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoConHanActionPerformed

    private void rdoHetHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHetHanActionPerformed
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoHetHanActionPerformed

    private void rdoSapHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSapHHActionPerformed
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoSapHHActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String tenKH = txtSearch.getText().trim();
        dtm = (DefaultTableModel) tblListHD.getModel();
        showDataTableHD(searchByTenKH(tenKH, lists));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblListTSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListTSMouseClicked
        // TODO add your handling code here:
        addHDTS();
//        service.addHDTS(hdts);
//        showDataAll();

    }//GEN-LAST:event_tblListTSMouseClicked
    public void showDataTableHD(List<HopDong> lists) {
        dtm.setRowCount(0);
        for (HopDong hd : lists) {
            dtm.addRow(hd.toDataRow());
        }
    }

    public void showDataTableHDTS(List<HopDongTaiSan> lists) {
        dtm.setRowCount(0);
        for (HopDongTaiSan hdts : lists) {
            dtm.addRow(hdts.toDataRow());
        }
    }

    public void showDataTableKH(List<KhachHang> listKH) {
        dtm.setRowCount(0);
        for (KhachHang kh : listKH) {
            dtm.addRow(kh.toDataRow());
        }
    }

    public void showDataTablePT(List<PhongTro> listPT) {
        dtm.setRowCount(0);
        for (PhongTro pt : listPT) {
            dtm.addRow(pt.toDataRow());
        }
    }

    public void showDataTableTS(List<TaiSan> listTS) {
        dtm.setRowCount(0);
        for (TaiSan ts : listTS) {
            dtm.addRow(ts.toDataRow());
        }
    }

    public void showDataAll() {
        lists = service.getAll();
        listKH = service.getListKH();
        listPT = service.getListPT();
        listTS = service.getListTS();
//        listHDTS = service.getListHDTS();
        listMa = service.getListMa();

        dtm = (DefaultTableModel) tblListHD.getModel();
        showDataTableHD(lists);

        dtm = (DefaultTableModel) tblListHDTS.getModel();
        showDataTableHDTS(listHDTS);
        dtm = (DefaultTableModel) tblListKH.getModel();
        showDataTableKH(listKH);
        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);
        dtm = (DefaultTableModel) tblListTS.getModel();
        showDataTableTS(listTS);
    }

    public boolean checkData() {
        if (txtMaHD.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Hợp Đồng không được bỏ trống!");
            return false;
        } else if (txtTenKH.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên Khách Hàng không được bỏ trống!");
            return false;
        } else if (txtCCCD.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "CCCD không được để trống!");
            return false;
        } else if (txtNgSinh.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Sinh không được để trống!");
            return false;
        } else if (txtEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email không được để trống!");
            return false;
        } else if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SDT không được để trống!");
            return false;
        } else if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa Chỉ không được để trống!");
            return false;
        } else if (txtPhong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phòng");
            return false;
        } else if (txtTienCoc.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tiền Cọc không được bỏ trống!");
            return false;
        } else if (!checkNumber(txtTienCoc.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtGiaPhong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá Phòng không được bỏ trống!");
            return false;
        } else if (!checkNumber(txtGiaPhong.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtDongTien.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Đóng Tiền Phòng không được bỏ trống!");
            return false;
        } else if (!checkNumber(txtDongTien.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtGiaDien.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá Điện không được bỏ trống!");
            return false;
        } else if (!checkNumber(txtGiaDien.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtGiaNuoc.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá Nước không được bỏ trống!");
            return false;
        } else if (!checkNumber(txtGiaNuoc.getText().trim().replace(".", ""))) {
            return false;
        } else if (dcNgTao.getDateFormatString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Tạo không được bỏ trống!");
            return false;
        } else if (dcNgKT.getDateFormatString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Kết Thúc không được bỏ trống!");
            return false;
        } else if (dcNgTao.getDate().compareTo(dcNgKT.getDate()) >= 0) {
            JOptionPane.showMessageDialog(this, "Ngày Kết Thúc không hợp lệ!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkNumber(String so) {
        String kyTu = "\\d+";
        if (so.matches(kyTu)) {
            if (Integer.valueOf(so) <= 0) {
                JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ2!");
                return false;
            } else {
                return true;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ1!");
            return false;
        }
    }

    public boolean checkPhong() {
        String phong = txtPhong.getText().trim();
        lists = service.getAll();
        for (HopDong hd : lists) {
            if (phong.equalsIgnoreCase(service.getPTById(hd.getIdPhongTro()).getTen())) {
                JOptionPane.showMessageDialog(this, "Phòng trọ đã cho thuê!");
                return false;
            }
        }
        return true;
    }

    public boolean checkDataKH() {
        if (txtTenKH.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên Khách Hàng không được để trống!");
            return false;
        } else if (txtCCCD.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "CCCD không được để trống!");
            return false;
        } else if (txtNgSinh.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Sinh không được để trống!");
            return false;
        } else if (txtEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email không được để trống!");
            return false;
        } else if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SDT không được để trống!");
            return false;
        } else if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa Chỉ không được để trống!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkCCCD(String cccd) {
        String kyTu = "\\d{12}";
        if (cccd.matches(kyTu)) {
            for (KhachHang kh : listKH) {
                if (cccd.equalsIgnoreCase(kh.getCccd())) {
                    JOptionPane.showMessageDialog(this, "CCCD đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "CCCD không hợp lệ!");
            return false;
        }
    }

    public boolean checkEmail(String email) {
        String kyTu = "\\w+[@]\\w+([.]\\w+)+";
        if (email.matches(kyTu)) {
            for (KhachHang kh : listKH) {
                if (email.equalsIgnoreCase(kh.getEmail())) {
                    JOptionPane.showMessageDialog(this, "Email đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
            return false;
        }
    }

    public boolean checkSDT(String sdt) {
        String kyTu = "[0]\\d{9}";
        if (sdt.matches(kyTu)) {
            for (KhachHang kh : listKH) {
                if (sdt.equalsIgnoreCase(kh.getSdt())) {
                    JOptionPane.showMessageDialog(this, "SDT đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "SDT không hợp lệ!");
            return false;
        }
    }

    public boolean checkMa() {
        String ma = txtMaHD.getText().trim();
        listMa = service.getListMa();
        for (String s : listMa) {
            if (ma.matches(s)) {
                JOptionPane.showMessageDialog(this, "Mã Hợp Đồng đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    private HopDong getDataFromView() {
        UUID id = UUID.randomUUID();
        String ma = txtMaHD.getText().trim();
        String tienCoc = txtTienCoc.getText().trim();
        String giaPhong = txtGiaPhong.getText().trim();
        String giaDien = txtGiaDien.getText().trim();
        String giaNuoc = txtGiaNuoc.getText().trim();
        String dongTien = txtDongTien.getText().trim();
        Date ngTao = dcNgTao.getDate();
        Date ngKT = dcNgKT.getDate();
        String idPT = service.getIdPTByTenPT(txtPhong.getText().trim());
        String idKH = service.getIdKHBySDT(txtSDT.getText().trim());
        return new HopDong(String.valueOf(id), ma, Double.valueOf(tienCoc), Double.valueOf(giaPhong), Double.valueOf(giaDien), Double.valueOf(giaNuoc), ngTao, ngKT, Integer.valueOf(dongTien), idPT, idKH);
    }

    private KhachHang getDataKHFromView() {
        UUID id = UUID.randomUUID();
        int kh = 0;
        listKH = service.getListKH();
        for (KhachHang khachHang : listKH) {
            kh++;
        }
        String maKH = "KH0" + String.valueOf(kh + 1);
        String ten = txtTenKH.getText().trim();
        String cccd = txtCCCD.getText().trim();
        String ngSinh = txtNgSinh.getText().trim();
        String email = txtEmail.getText().trim();
        String sdt = txtSDT.getText().trim();
        boolean gioiTinh = true;
        if (rdoNu.isSelected()) {
            gioiTinh = false;
        }
        String diaChi = txtDiaChi.getText().trim();
        return new KhachHang(String.valueOf(id), maKH, ten, cccd, Support.toDate(ngSinh, "dd/MM/yyyy"), email, sdt, gioiTinh, diaChi);
    }

    public void detailHD(int index) {
        lists = service.getAll();
        HopDong hd = lists.get(index);
        txtMaHD.setText(hd.getMa());

        KhachHang kh = service.getKHById(hd.getIdKH());
        txtTenKH.setText(kh.getTen());
        txtNgSinh.setText(Support.toString(kh.getNgSinh(), "dd/MM/yyyy"));
        if (kh.isGioiTinh() == true) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtSDT.setText(kh.getSdt());
        txtCCCD.setText(kh.getCccd());
        txtEmail.setText(kh.getEmail());
        txtDiaChi.setText(kh.getDiaChi());

        PhongTro pt = service.getPTById(hd.getIdPhongTro());
        txtPhong.setText(pt.getTen());
        txtTang.setText(pt.getTang());
        txtLoaiPhong.setText(service.getLoaiPhongByIdPhong(pt.getId()));
        txtDienTich.setText(service.getDienTichByIdPhong(pt.getId()));
        txtGiaPhong.setText(service.getGiaPhongByIdPhong(pt.getId()));

        txtTienCoc.setText(String.valueOf(hd.getTienCoc()));
        txtGiaPhong.setText(String.valueOf(hd.getGiaPhong()));
        txtDongTien.setText(String.valueOf(hd.getThoiGianNopTien()));
        txtGiaDien.setText(String.valueOf(hd.getGiaDien()));
        txtGiaNuoc.setText(String.valueOf(hd.getGiaNuoc()));
        dcNgTao.setDate(hd.getNgTao());
        dcNgKT.setDate(hd.getNgKT());
    }

    public void detailKH(int index) {
        listKH = service.getListKH();
        KhachHang kh = listKH.get(index);
        txtTenKH.setText(kh.getTen());
        txtNgSinh.setText(Support.toString(kh.getNgSinh(), "dd/MM/yyyy"));
        if (kh.isGioiTinh() == true) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtSDT.setText(kh.getSdt());
        txtCCCD.setText(kh.getCccd());
        txtEmail.setText(kh.getEmail());
        txtDiaChi.setText(kh.getDiaChi());
    }

    public void detailPT(int index) {
        listPT = service.getListPT();
        PhongTro pt = listPT.get(index);
        txtPhong.setText(pt.getTen());
        txtTang.setText(pt.getTang());
        txtLoaiPhong.setText(service.getLoaiPhongByIdPhong(pt.getId()));
        txtDienTich.setText(service.getDienTichByIdPhong(pt.getId()));
        txtGiaPhong.setText(service.getGiaPhongByIdPhong(pt.getId()));
    }

    public void searchByTT() {
        if (rdoTatCa.isSelected()) {
            lists = service.getAll();
            dtm = (DefaultTableModel) tblListHD.getModel();
            showDataTableHD(lists);
        } else if (rdoConHan.isSelected()) {
            lists = service.searchHDConHan();
            dtm = (DefaultTableModel) tblListHD.getModel();
            showDataTableHD(lists);
        } else if (rdoHetHan.isSelected()) {
            lists = service.searchHDHetHan();
            dtm = (DefaultTableModel) tblListHD.getModel();
            showDataTableHD(lists);
        } else if (rdoSapHH.isSelected()) {
            lists = service.searchHDSapHetHan();
            dtm = (DefaultTableModel) tblListHD.getModel();
            showDataTableHD(lists);
        }
    }

    public List<HopDong> searchByTenKH(String tenKH, List<HopDong> lists) {
        List<HopDong> listSearch = new ArrayList<>();
        for (HopDong hd : lists) {
            if (service.getKHById(hd.getIdKH()).getTen().contains(tenKH)) {
                listSearch.add(hd);
            }
        }
        return listSearch;
    }

    public void addHDTS() {
        int sl = 1;
        int dem = 1;
        int index = tblListTS.getSelectedRow();
        listTS = service.getListTS();
        String id = listTS.get(index).getId();
        for (HopDongTaiSan hdts : listHDTS) {
            if (id.equalsIgnoreCase(hdts.getIdTS())) {
                dem++;
                hdts.setSoLuong(hdts.getSoLuong() + 1);
                showDataAll();
            }
        }
        if (dem == 1) {
            HopDongTaiSan hdts = new HopDongTaiSan(String.valueOf(UUID.randomUUID()), id, sl);
            listHDTS.add(hdts);
            showDataAll();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyHopDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyHopDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyHopDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyHopDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyHopDong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgGioiTinh;
    private javax.swing.ButtonGroup bgSearch;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTaoHD;
    private com.toedter.calendar.JDateChooser dcNgKT;
    private com.toedter.calendar.JDateChooser dcNgTao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdoConHan;
    private javax.swing.JRadioButton rdoHetHan;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoSapHH;
    private javax.swing.JRadioButton rdoTatCa;
    private javax.swing.JTable tblListHD;
    private javax.swing.JTable tblListHDTS;
    private javax.swing.JTable tblListKH;
    private javax.swing.JTable tblListPT;
    private javax.swing.JTable tblListTS;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDienTich;
    private javax.swing.JTextField txtDongTien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGiaDien;
    private javax.swing.JTextField txtGiaNuoc;
    private javax.swing.JTextField txtGiaPhong;
    private javax.swing.JTextField txtLoaiPhong;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtNgSinh;
    private javax.swing.JTextField txtPhong;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTang;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTienCoc;
    // End of variables declaration//GEN-END:variables
}
