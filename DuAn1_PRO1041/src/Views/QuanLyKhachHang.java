/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DomainModel.KhachHang;
import Services.IKhachHangService;
import Services.Impl.KhachHangServiceImpl;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Utilities.Support;
import java.util.Date;
import java.util.UUID;

/**
 *
 * @author PC ASUS
 */
public class QuanLyKhachHang extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private IKhachHangService service;
    private List<KhachHang> lists;
    private List<String> listMa;

    /**
     * Creates new form QuanLyKhachHang
     */
    public QuanLyKhachHang() {
        initComponents();
        dtm = new DefaultTableModel();
        lists = new ArrayList<>();
        service = new KhachHangServiceImpl();

        lists = service.getAll();
        listMa = service.getListMa();

        dtm = (DefaultTableModel) tblListKH.getModel();

        showDataTable(lists);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgGioiTinh = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtCCCD = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtDiaChi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListKH = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ KHÁCH HÀNG");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");

        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã Khách Hàng");

        jLabel3.setText("Tên Khách Hàng");

        jLabel4.setText("CCCD");

        jLabel5.setText("Ngày Sinh");

        jLabel6.setText("Email");

        jLabel7.setText("SDT");

        jLabel8.setText("Giới Tính");

        jLabel9.setText("Địa Chỉ");

        bgGioiTinh.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        bgGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");

        tblListKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "CCCD", "Ngày Sinh", "Email", "SDT", "Giới Tính", "Địa Chỉ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListKHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListKH);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel10.setText("Nhập SDT Khách Hàng cần tìm: ");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTen)
                                    .addComponent(txtCCCD)
                                    .addComponent(txtNgaySinh)
                                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdoNam)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNu))
                                    .addComponent(txtEmail)
                                    .addComponent(txtSDT)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnLamMoi)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel1)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLamMoi)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnThem)
                    .addComponent(btnSua))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (txtMa.getText().trim().isEmpty() 
                && txtTen.getText().trim().isEmpty()
                && txtCCCD.getText().trim().isEmpty()
                && txtNgaySinh.getText().trim().isEmpty()
                && txtEmail.getText().trim().isEmpty()
                && txtDiaChi.getText().trim().isEmpty()
                && !txtSDT.getText().trim().isEmpty()
                ) {
            KhachHang kh = getSDT();
            service.addNhanh(kh);
            lists = service.getAll();
            showDataTable(lists);
            return;
        }
        if (checkData()) {
            if (checkMa() && checkCCCD(txtCCCD.getText().trim()) && checkEmail(txtEmail.getText().trim()) && checkSDT(txtSDT.getText().trim())) {
                KhachHang kh = getDataFromView();
                service.add(kh);
                lists = service.getAll();
                showDataTable(lists);
            }
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int index = tblListKH.getSelectedRow();
        if (index >= 0) {
            lists = service.getAll();
            String id = lists.get(index).getId();
            String ma = lists.get(index).getMa();
            String cccd = lists.get(index).getCccd();
            String email = lists.get(index).getEmail();
            String sdt = lists.get(index).getSdt();
            KhachHang kh = getDataFromView();
            if (ma == null) {
                if (checkData()) {
                    service.update(kh, id);
                    lists = service.getAll();
                    showDataTable(lists);
                    return;
                }
            } else if (!ma.equalsIgnoreCase(kh.getMa())) {
                if (checkData()) {
                    if (checkMa()) {
                        service.update(kh, id);
                        lists = service.getAll();
                        showDataTable(lists);
                        return;
                    }
                }
            }
            if (!cccd.equalsIgnoreCase(kh.getCccd())) {
                if (checkData()) {
                    if (checkCCCD(cccd)) {
                        service.update(kh, id);
                        lists = service.getAll();
                        showDataTable(lists);
                        return;
                    }
                }
            }
            if (!email.equalsIgnoreCase(kh.getEmail())) {
                if (checkData()) {
                    if (checkEmail(email)) {
                        service.update(kh, id);
                        lists = service.getAll();
                        showDataTable(lists);
                        return;
                    }
                }
            }
            if (!sdt.equalsIgnoreCase(kh.getSdt())) {
                if (checkData()) {
                    if (checkSDT(sdt)) {
                        service.update(kh, id);
                        lists = service.getAll();
                        showDataTable(lists);
                        return;
                    }
                }
            }
            service.update(kh, id);
            lists = service.getAll();
            showDataTable(lists);
        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!");
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        lists = service.getAll();
        int index = tblListKH.getSelectedRow();
        if (index >= 0) {
            String id = lists.get(index).getId();
            service.delete(id);
            lists = service.getAll();
            showDataTable(lists);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtMa.setText("");
        txtTen.setText("");
        txtCCCD.setText("");
        txtNgaySinh.setText("");
        txtEmail.setText("");
        txtSDT.setText("");
        rdoNam.setSelected(true);
        txtDiaChi.setText("");
        txtSearch.setText("");
        showDataTable(lists);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tblListKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListKHMouseClicked
        // TODO add your handling code here:
        int index = tblListKH.getSelectedRow();
        detail(index);
    }//GEN-LAST:event_tblListKHMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        showDataTable(timKiem(txtSearch.getText()));
    }//GEN-LAST:event_txtSearchKeyReleased
    public void showDataTable(List<KhachHang> lists) {
        dtm.setRowCount(0);
        for (KhachHang kh : lists) {
            dtm.addRow(kh.toDataRow());
        }
    }

    public boolean checkData() {
        if (txtMa.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Khách Hàng không được để trống!");
            return false;
        } else if (txtTen.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên Khách Hàng không được để trống!");
            return false;
        } else if (txtCCCD.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "CCCD không được để trống!");
            return false;
        } else if (txtNgaySinh.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Sinh không được để trống!");
            return false;
        } else if (txtEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email không được để trống!");
            return false;
        } else if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SDT không được để trống!");
            return false;
        } else if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa Chỉ không được để trống!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkCCCD(String cccd) {
        String kyTu = "\\d{12}";
        if (cccd.matches(kyTu)) {
            for (KhachHang kh : lists) {
                if (cccd.equalsIgnoreCase(kh.getCccd())) {
                    JOptionPane.showMessageDialog(this, "CCCD đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "CCCD không hợp lệ!");
            return false;
        }
    }

    public boolean checkEmail(String email) {
        String kyTu = "\\w+[@]\\w+([.]\\w+)+";
        if (email.matches(kyTu)) {
            for (KhachHang kh : lists) {
                if (email.equalsIgnoreCase(kh.getEmail())) {
                    JOptionPane.showMessageDialog(this, "Email đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
            return false;
        }
    }

    public boolean checkSDT(String sdt) {
        String kyTu = "[0]\\d{9}";
        if (sdt.matches(kyTu)) {
            for (KhachHang kh : lists) {
                if (sdt.equalsIgnoreCase(kh.getSdt())) {
                    JOptionPane.showMessageDialog(this, "SDT đã tồn tại!");
                    return false;
                }
            }
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "SDT không hợp lệ!");
            return false;
        }
    }

    public boolean checkMa() {
        String ma = txtMa.getText().trim();
        for (String s : listMa) {
            if (ma.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Mã Khách Hàng đã tồn tại!");
                return false;
            }
        }
        return true;
    }


    public void detail(int index) {
        lists = service.getAll();
        KhachHang kh = lists.get(index);
        txtMa.setText(kh.getMa());
        txtTen.setText(kh.getTen());
        txtCCCD.setText(kh.getCccd());
        txtNgaySinh.setText(Support.toString(kh.getNgSinh()));
        txtEmail.setText(kh.getEmail());
        txtSDT.setText(kh.getSdt());
        if (kh.isGioiTinh() == true) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtDiaChi.setText(kh.getDiaChi());
    }

    private KhachHang getDataFromView() {
        UUID id = UUID.randomUUID();
        String ma = txtMa.getText().trim();
        String ten = txtTen.getText().trim();
        String cccd = txtCCCD.getText().trim();
        Date ngSinh = Support.toDate(txtNgaySinh.getText());
        String email = txtEmail.getText().trim();
        String sdt = txtSDT.getText().trim();
        boolean gioiTinh = true;
        if (rdoNu.isSelected()) {
            gioiTinh = false;
        }
        String diaChi = txtDiaChi.getText().trim();
        return new KhachHang(String.valueOf(id), ma, ten, cccd, ngSinh, email, sdt, gioiTinh, diaChi);
    }

    private KhachHang getSDT() {
        KhachHang kh = new KhachHang();
        UUID id = UUID.randomUUID();
        kh.setId(String.valueOf(id));
        kh.setSdt(txtSDT.getText());
        return kh;
    }

    public List<KhachHang> timKiem(String sdt) {
        lists = service.getAll();
        List<KhachHang> listSearch = new ArrayList();
        for (KhachHang kh : lists) {
            if (kh.getSdt().contains(sdt)) {
                listSearch.add(kh);
            }
        }
        return listSearch;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyKhachHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgGioiTinh;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblListKH;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
