/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DomainModel.HoaDonPhong;
import DomainModel.PhongTro;
import Services.IHoaDonPhongService;
import Services.IPhongTroService;
import Services.Impl.HoaDonPhongServiceImpl;
import Services.Impl.PhongTroServiceImpl;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Utilities.Support;

/**
 *
 * @author PC ASUS
 */
public class QuanLyHoaDonPhong extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private DefaultComboBoxModel dcbm;

    private IHoaDonPhongService service;
    private IPhongTroService servicePT;

    private List<HoaDonPhong> lists;
    private List<PhongTro> listPT;

    private List<String> listMa;
    private List<String> listPhong;

    /**
     * Creates new form QuanLyHoaDonPhong
     */
    public QuanLyHoaDonPhong() {
        initComponents();
        dtm = new DefaultTableModel();
        lists = new ArrayList<>();
        listPT = new ArrayList<>();

        service = new HoaDonPhongServiceImpl();
        servicePT = new PhongTroServiceImpl();

        lists = service.getAll();
        listPT = servicePT.getListDSD();

        listMa = service.getListMa();
//        listThang = service.getListThang();
        listPhong = service.getListPhong();

        dtm = (DefaultTableModel) tblListHDP.getModel();
        showDataTable(lists);

        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);

//        dcbm = (DefaultComboBoxModel) cbThang.getModel();
//        showComboBoxModel(getListThang(service.getIDByPhong(txtPhong.getText().trim())));
//
//        txtTenKH.setText(service.getTenKHByPhong(txtPhong.getText().trim()));
//        txtTongTien.setText(String.valueOf(service.getGiaByPhong(txtPhong.getText().trim())));
    }
    
    private void clear() {
        txtMa.setText("");
        txtPhong.setText("");
        txtTenKH.setText("");
        txtTongTien.setText("");
        txtNgTao.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgTrangThai = new javax.swing.ButtonGroup();
        bgListTT = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtTenKH = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        rdoDaTT = new javax.swing.JRadioButton();
        rdoChuaTT = new javax.swing.JRadioButton();
        btnTaoHD = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNgTao = new javax.swing.JTextField();
        cbThang = new javax.swing.JComboBox<>();
        txtPhong = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblListPT = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        rdoTatCa = new javax.swing.JRadioButton();
        rdoDaThanhToan = new javax.swing.JRadioButton();
        rdoChuaThanhToan = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnHDDH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListHDP = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN PHÒNG");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        txtTenKH.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtTenKH.setEnabled(false);

        jLabel7.setText("Trạng Thái");

        txtTongTien.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtTongTien.setEnabled(false);

        bgTrangThai.add(rdoDaTT);
        rdoDaTT.setText("Đã thanh toán");

        bgTrangThai.add(rdoChuaTT);
        rdoChuaTT.setSelected(true);
        rdoChuaTT.setText("Chưa thanh toán");

        btnTaoHD.setText("Tạo Hóa Đơn");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã Hóa Đơn");

        jLabel3.setText("Tháng");

        jLabel4.setText("Phòng");

        jLabel5.setText("Tên Khách Hàng");

        jLabel6.setText("Tổng Tiền");

        jLabel8.setText("Ngày Tạo");

        txtPhong.setEnabled(false);
        txtPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPhongMouseClicked(evt);
            }
        });
        txtPhong.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtPhongInputMethodTextChanged(evt);
            }
        });
        txtPhong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhongKeyReleased(evt);
            }
        });

        jButton1.setText("Làm mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(btnTaoHD))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(rdoDaTT))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnCapNhat)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(rdoChuaTT)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNgTao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMa, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbThang, javax.swing.GroupLayout.Alignment.LEADING, 0, 179, Short.MAX_VALUE)
                            .addComponent(txtPhong, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNgTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rdoDaTT)
                    .addComponent(rdoChuaTT))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoHD)
                    .addComponent(btnCapNhat)
                    .addComponent(jButton1))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        tblListPT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Loại Phòng", "Tầng", "Trạng Thái", "Mô Tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListPT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListPTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblListPT);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Danh Sách Phòng");

        bgListTT.add(rdoTatCa);
        rdoTatCa.setSelected(true);
        rdoTatCa.setText("Tất cả");
        rdoTatCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoTatCaMouseClicked(evt);
            }
        });
        rdoTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTatCaActionPerformed(evt);
            }
        });

        bgListTT.add(rdoDaThanhToan);
        rdoDaThanhToan.setText("Đã thanh toán");
        rdoDaThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoDaThanhToanMouseClicked(evt);
            }
        });
        rdoDaThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDaThanhToanActionPerformed(evt);
            }
        });

        bgListTT.add(rdoChuaThanhToan);
        rdoChuaThanhToan.setText("Chưa thanh toán");
        rdoChuaThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoChuaThanhToanMouseClicked(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel9.setText("Tìm Hóa Đơn theo Phòng: ");

        btnHDDH.setText("Hóa Đơn Đến Hạn");
        btnHDDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHDDHMouseClicked(evt);
            }
        });
        btnHDDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHDDHActionPerformed(evt);
            }
        });

        tblListHDP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hóa Đơn", "Tháng", "Phòng", "Tên Khách Hàng", "Tổng Tiền", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListHDP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListHDPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListHDP);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Danh Sách Hóa Đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(rdoTatCa)
                            .addGap(18, 18, 18)
                            .addComponent(rdoDaThanhToan)
                            .addGap(18, 18, 18)
                            .addComponent(rdoChuaThanhToan))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnHDDH))
                    .addComponent(jLabel11))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(366, 366, 366))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoTatCa)
                            .addComponent(rdoDaThanhToan)
                            .addComponent(rdoChuaThanhToan))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnHDDH)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        // TODO add your handling code here:
        if (checkData()) {
            if (checkMa()) {
                HoaDonPhong hdp = getDataFromView();
                service.add(hdp);
                lists = service.getAll();
                dtm = (DefaultTableModel) tblListHDP.getModel();
                showDataTable(lists);
            }
        }
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void tblListHDPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListHDPMouseClicked
        // TODO add your handling code here:
        int index = tblListHDP.getSelectedRow();
        detail(index);
        lists = service.getAll();
        String id = lists.get(index).getIdPT();
        String thang = String.valueOf(lists.get(index).getThang());
        
        
        dcbm = (DefaultComboBoxModel) cbThang.getModel();
        showComboBoxModel(getListThang(service.getIDByPhong(txtPhong.getText().trim()), service.getListThangDTT(id)));
        dcbm.addElement(thang);
        cbThang.setSelectedItem(thang);

    }//GEN-LAST:event_tblListHDPMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        int index = tblListHDP.getSelectedRow();
        if (index >= 0) {
            lists = service.getAll();
            String id = lists.get(index).getId();
            String ma = lists.get(index).getMa();
            HoaDonPhong hdp = getDataFromView();
            if (ma.equalsIgnoreCase(hdp.getMa())) {
                if (checkData()) {
                    service.update(hdp, id);
                    showDataTableAll();
                }
            } else {
                if (checkData()) {
                    service.update(hdp, id);
                    lists = service.getAll();
                    showDataTableAll();
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần cập nhật!");
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void rdoTatCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoTatCaMouseClicked
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoTatCaMouseClicked

    private void rdoDaThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoDaThanhToanMouseClicked
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoDaThanhToanMouseClicked

    private void rdoChuaThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoChuaThanhToanMouseClicked
        // TODO add your handling code here:
        searchByTT();
    }//GEN-LAST:event_rdoChuaThanhToanMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        showDataTable(service.search(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnHDDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHDDHMouseClicked
        // TODO add your handling code here
    }//GEN-LAST:event_btnHDDHMouseClicked

    private void tblListPTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListPTMouseClicked
        // TODO add your handling code here:
        int index = tblListPT.getSelectedRow();
        detailPT(index);

        listPT = servicePT.getAll();
        String id = listPT.get(index).getId();
        dcbm = (DefaultComboBoxModel) cbThang.getModel();
        showComboBoxModel(getListThang(service.getIDByPhong(txtPhong.getText().trim()), service.getListThangDTT(id)));

        txtTenKH.setText(service.getTenKHByPhong(txtPhong.getText().trim()));
        txtTongTien.setText(String.valueOf(service.getGiaByPhong(txtPhong.getText().trim())));
    }//GEN-LAST:event_tblListPTMouseClicked

    private void txtPhongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhongKeyReleased
        // TODO add your handling code here:
//        dcbm = (DefaultComboBoxModel) cbThang.getModel();
//        showComboBoxModel(getListThang(service.getIDByPhong(txtPhong.getText().trim())));
//
//        txtTenKH.setText(service.getTenKHByPhong(txtPhong.getText().trim()));
//        txtTongTien.setText(String.valueOf(service.getGiaByPhong(txtPhong.getText().trim())));
    }//GEN-LAST:event_txtPhongKeyReleased

    private void txtPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPhongMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhongMouseClicked

    private void txtPhongInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtPhongInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhongInputMethodTextChanged

    private void btnHDDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHDDHActionPerformed
        // TODO add your handling code here:
        dtm = (DefaultTableModel) tblListHDP.getModel();
        showDataTable(service.getListHDDH());
    }//GEN-LAST:event_btnHDDHActionPerformed

    private void rdoTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTatCaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoTatCaActionPerformed

    private void rdoDaThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDaThanhToanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDaThanhToanActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void showDataTable(List<HoaDonPhong> lists) {
        dtm.setRowCount(0);
        for (HoaDonPhong hdp : lists) {
            dtm.addRow(hdp.toDataRow());
        }
    }

    public void showDataTablePT(List<PhongTro> lists) {
        dtm.setRowCount(0);
        for (PhongTro pt : listPT) {
            dtm.addRow(pt.toDataRow());
        }
    }

    public void showDataTableAll() {
        lists = service.getAll();
        listPT = servicePT.getListDSD();

        dtm = (DefaultTableModel) tblListHDP.getModel();
        showDataTable(lists);

        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);
    }

    public void showComboBoxModel(List<String> lists) {
        dcbm.removeAllElements();
        for (String s : lists) {
            dcbm.addElement(s);
        }
    }

    public List<String> getListThang(String idPhong, List<String> listThangDTT) {
        List<String> listThang = new ArrayList<>();
        int thang = service.getThangTaoHDByIDPhong(idPhong);
        int soThang = service.getThoiHanNopTienByIDPhong(idPhong);
        for (int i = thang; i <= 12; i += soThang) {
            listThang.add(String.valueOf(i));
        }
        for (String s : listThangDTT) {
            listThang.remove(s);
        }
        return listThang;
    }

    public boolean checkData() {
        if (txtMa.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Hóa Đơn không được để trống!");
            return false;
        } else if (txtNgTao.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày Tạo không được để trống!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkMa() {
        String ma = txtMa.getText().trim();
        for (String s : listMa) {
            if (ma.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Mã Hóa Đơn đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    private HoaDonPhong getDataFromView() {
        UUID id = UUID.randomUUID();
        String ma = txtMa.getText().trim();
        String idPhong = service.getIDByPhong(txtPhong.getText().trim());
        String thang = cbThang.getSelectedItem().toString();
        String idKH = service.getIDByKH(txtTenKH.getText().trim());
        String gia = txtTongTien.getText().trim();
        String ngTao = txtNgTao.getText().trim();
        String idHD = service.getIDHDByPhong(txtPhong.getText().trim());
        boolean trangThai = true;
        if (rdoChuaTT.isSelected()) {
            trangThai = false;
        }
        return new HoaDonPhong(String.valueOf(id), ma, Integer.valueOf(thang), Support.toDate(ngTao, "dd/MM/yyyy"), Double.valueOf(gia), trangThai, idPhong, idKH, idHD);
    }

    public void detail(int index) {
        lists = service.getAll();
        HoaDonPhong hdp = lists.get(index);
        txtMa.setText(hdp.getMa());
        txtPhong.setText(service.getPhongById(hdp.getIdPT()));
        cbThang.setSelectedItem(hdp.getThang());
        txtTenKH.setText(service.getKHByID(hdp.getIdKH()));
        txtTongTien.setText(String.valueOf(hdp.getTongTien()));
        txtNgTao.setText(Support.toString(hdp.getNgTao(), "dd/MM/yyyy"));
        if (hdp.isTrangThai() == true) {
            rdoDaTT.setSelected(true);
        } else {
            rdoChuaTT.setSelected(true);
        }
    }

    public void detailPT(int index) {
        listPT = servicePT.getAll();
        PhongTro pt = listPT.get(index);
        txtPhong.setText(service.getPhongById(pt.getId()));
    }

    public void searchByTT() {
        if (rdoTatCa.isSelected()) {
            lists = service.getAll();
            dtm = (DefaultTableModel) tblListHDP.getModel();
            showDataTable(lists);
        } else if (rdoDaThanhToan.isSelected()) {
            lists = service.getListByTT(1);
            dtm = (DefaultTableModel) tblListHDP.getModel();
            showDataTable(lists);
        } else if (rdoChuaThanhToan.isSelected()) {
            lists = service.getListByTT(0);
            dtm = (DefaultTableModel) tblListHDP.getModel();
            showDataTable(lists);
        }
    }

    public List<HoaDonPhong> searchByTenPhong(String tenPhong, List<HoaDonPhong> lists) {
        List<HoaDonPhong> listSearch = new ArrayList<>();
        for (HoaDonPhong hdp : lists) {
            if (service.getPhongById(hdp.getIdPT()).contains(tenPhong)) {
                listSearch.add(hdp);
            }
        }
        return listSearch;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoaDonPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoaDonPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoaDonPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoaDonPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyHoaDonPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgListTT;
    private javax.swing.ButtonGroup bgTrangThai;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnHDDH;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.JComboBox<String> cbThang;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rdoChuaTT;
    private javax.swing.JRadioButton rdoChuaThanhToan;
    private javax.swing.JRadioButton rdoDaTT;
    private javax.swing.JRadioButton rdoDaThanhToan;
    private javax.swing.JRadioButton rdoTatCa;
    private javax.swing.JTable tblListHDP;
    private javax.swing.JTable tblListPT;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgTao;
    private javax.swing.JTextField txtPhong;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

}
