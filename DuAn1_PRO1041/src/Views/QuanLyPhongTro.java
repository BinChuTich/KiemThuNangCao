/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DomainModel.LoaiPhong;
import DomainModel.PhongTro;
import Services.ILoaiPhongService;
import Services.IPhongTroService;
import Services.Impl.LoaiPhongServiceImpl;
import Services.Impl.PhongTroServiceImpl;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC ASUS
 */
public class QuanLyPhongTro extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private DefaultComboBoxModel dcbm;

    private IPhongTroService servicePT;
    private ILoaiPhongService serviceLP;

    private List<String> listTTLP;

    private List<PhongTro> listPT;
    private List<LoaiPhong> listLP;

    private List<String> listMaPT;
    private List<String> listMaLP;

    private List<String> listTenPT;

    /**
     * Creates new form QuanLyPhongTro
     */
    public QuanLyPhongTro() {
        initComponents();
        dtm = new DefaultTableModel();
        dcbm = new DefaultComboBoxModel();

        listPT = new ArrayList<>();
        listLP = new ArrayList<>();

        listTTLP = new ArrayList<>();

        servicePT = new PhongTroServiceImpl();
        serviceLP = new LoaiPhongServiceImpl();

        listPT = servicePT.getAll();
        listLP = serviceLP.getAll();

        listMaPT = servicePT.getListMa();
        listMaLP = serviceLP.getListMa();

        listTTLP = servicePT.getListTTLoaiPhong();

        listTenPT = servicePT.getListTen();

        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);

        dtm = (DefaultTableModel) tblListLP.getModel();
        showDataTableLP(listLP);

        dcbm = (DefaultComboBoxModel) cbLoaiPhong.getModel();
        showComboBoxModel(listTTLP);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgTrangThai = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        txtTenPhong = new javax.swing.JTextField();
        cbLoaiPhong = new javax.swing.JComboBox<>();
        txtTang = new javax.swing.JTextField();
        rdoChuaSD = new javax.swing.JRadioButton();
        rdoDangSD = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListPT = new javax.swing.JTable();
        btnLamMoiPT = new javax.swing.JButton();
        btnThemPT = new javax.swing.JButton();
        btnSuaPT = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtSearchPT = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaLP = new javax.swing.JTextField();
        txtTenLP = new javax.swing.JTextField();
        txtDienTich = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        btnThemLP = new javax.swing.JButton();
        btnSuaLP = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListLP = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        txtSearchLP = new javax.swing.JTextField();
        btnLamMoiLP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ PHÒNG TRỌ");

        jLabel7.setText("Mã Phòng");

        jLabel8.setText("Tên Phòng");

        jLabel9.setText("Loại Phòng");

        jLabel10.setText("Tầng");

        jLabel11.setText("Trạng Thái");

        jLabel12.setText("Mô Tả");

        bgTrangThai.add(rdoChuaSD);
        rdoChuaSD.setSelected(true);
        rdoChuaSD.setText("Chưa sử dụng");
        rdoChuaSD.setEnabled(false);

        bgTrangThai.add(rdoDangSD);
        rdoDangSD.setText("Đang sử dụng");
        rdoDangSD.setEnabled(false);

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane2.setViewportView(txtMoTa);

        tblListPT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Loại Phòng", "Tầng", "Trạng Thái", "Mô Tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListPT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListPTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblListPT);

        btnLamMoiPT.setText("Làm Mới");
        btnLamMoiPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiPTActionPerformed(evt);
            }
        });

        btnThemPT.setText("Thêm");
        btnThemPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPTActionPerformed(evt);
            }
        });

        btnSuaPT.setText("Sửa");
        btnSuaPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPTActionPerformed(evt);
            }
        });

        jLabel14.setText("Mời nhập vào Tên Phòng cần tìm: ");

        txtSearchPT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchPTKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoDangSD)
                                .addGap(18, 18, 18)
                                .addComponent(rdoChuaSD))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaPhong)
                                    .addComponent(txtTenPhong)
                                    .addComponent(cbLoaiPhong, 0, 212, Short.MAX_VALUE)
                                    .addComponent(txtTang)))
                            .addComponent(btnLamMoiPT)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnThemPT)
                                .addGap(18, 18, 18)
                                .addComponent(btnSuaPT)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchPT))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLamMoiPT)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtSearchPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cbLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(rdoDangSD)
                            .addComponent(rdoChuaSD))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPT)
                    .addComponent(btnSuaPT))
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Phòng Trọ", jPanel1);

        jLabel2.setText("Mã Loại Phòng");

        jLabel3.setText("Tên Loại Phòng");

        jLabel4.setText("Diện Tích (m2)");

        jLabel5.setText("Giá");

        btnThemLP.setText("Thêm");
        btnThemLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemLPActionPerformed(evt);
            }
        });

        btnSuaLP.setText("Sửa");
        btnSuaLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaLPActionPerformed(evt);
            }
        });

        tblListLP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Loại Phòng", "Tên Loại Phòng", "Diện Tích (m2)", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblListLP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListLPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListLP);

        jLabel13.setText("Mời nhập vào Loại Phòng cần tìm: ");

        txtSearchLP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchLPKeyReleased(evt);
            }
        });

        btnLamMoiLP.setText("Làm Mới");
        btnLamMoiLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiLPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(txtMaLP, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenLP, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDienTich, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchLP))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLamMoiLP)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnThemLP)
                                .addGap(18, 18, 18)
                                .addComponent(btnSuaLP)))
                        .addGap(0, 696, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLamMoiLP)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtSearchLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDienTich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemLP)
                    .addComponent(btnSuaLP))
                .addContainerGap(301, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Loại Phòng", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPTActionPerformed
        // TODO add your handling code here:
        if (checkDataPT()) {
            if (checkMaPT()) {
                if (checkTenPT()) {
                    PhongTro pt = getDataFromViewPT();
                    servicePT.add(pt);
                    listPT = servicePT.getAll();
                    dtm = (DefaultTableModel) tblListPT.getModel();
                    showDataTablePT(listPT);
                }
            }
        }
    }//GEN-LAST:event_btnThemPTActionPerformed

    private void btnThemLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLPActionPerformed
        // TODO add your handling code here:
        if (checkDataLP()) {
            if (checkMaLP()) {
                LoaiPhong lp = getDataFromViewLP();
                serviceLP.add(lp);
                listLP = serviceLP.getAll();
                showDataTableLP(listLP);
                listTTLP = servicePT.getListTTLoaiPhong();
                showComboBoxModel(listTTLP);

            }
        }
    }//GEN-LAST:event_btnThemLPActionPerformed

    private void btnSuaLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaLPActionPerformed
        // TODO add your handling code here:
        int index = tblListLP.getSelectedRow();
        if (index >= 0) {
            listLP = serviceLP.getAll();
            String id = listLP.get(index).getId();
            String ma = listLP.get(index).getMa();
            LoaiPhong lp = getDataFromViewLP();
            if (ma.equalsIgnoreCase(lp.getMa())) {
                if (checkDataLP()) {
                    serviceLP.update(lp, id);
                    listLP = serviceLP.getAll();
                    showDataTableLP(listLP);
                    listTTLP = servicePT.getListTTLoaiPhong();
                    showComboBoxModel(listTTLP);
                }
            } else {
                if (checkDataLP()) {
                    if (checkMaLP()) {
                        serviceLP.update(lp, id);
                        listLP = serviceLP.getAll();
                        showDataTableLP(listLP);
                        listTTLP = servicePT.getListTTLoaiPhong();
                        showComboBoxModel(listTTLP);
                    }
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!");
    }//GEN-LAST:event_btnSuaLPActionPerformed

    private void tblListLPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListLPMouseClicked
        // TODO add your handling code here:
        int index = tblListLP.getSelectedRow();
        detailLP(index);
    }//GEN-LAST:event_tblListLPMouseClicked

    private void txtSearchLPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchLPKeyReleased
        // TODO add your handling code here:
//        dtm = (DefaultTableModel) tblListLP.getModel();
//        showDataTableLP(timKiemLP(txtSearchLP.getText()));
        String ten = txtSearchLP.getText().trim();
        listLP = serviceLP.TimKiem(ten);
        dtm = (DefaultTableModel) tblListLP.getModel();
        showDataTableLP(listLP);
    }//GEN-LAST:event_txtSearchLPKeyReleased

    private void btnLamMoiLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiLPActionPerformed
        // TODO add your handling code here:
        txtMaLP.setText("");
        txtTenLP.setText("");
        txtDienTich.setText("");
        txtGia.setText("");
        txtSearchLP.setText("");
        listLP = serviceLP.getAll();
        showDataTableLP(listLP);
    }//GEN-LAST:event_btnLamMoiLPActionPerformed

    private void tblListPTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListPTMouseClicked
        // TODO add your handling code here:
        int index = tblListPT.getSelectedRow();
        detailPT(index);
    }//GEN-LAST:event_tblListPTMouseClicked

    private void txtSearchPTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchPTKeyReleased
        // TODO add your handling code here:
        String tenPhong = txtSearchPT.getText().trim();
        listPT = servicePT.TimKiem(tenPhong);
        dtm = (DefaultTableModel) tblListPT.getModel();
        showDataTablePT(listPT);
    }//GEN-LAST:event_txtSearchPTKeyReleased

    private void btnSuaPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPTActionPerformed
        // TODO add your handling code here:
        int index = tblListPT.getSelectedRow();
        if (index >= 0) {
            listPT = servicePT.getAll();
            String id = listPT.get(index).getId();
            String ma = listPT.get(index).getMa();
            String ten = listPT.get(index).getTen();
            PhongTro pt = getDataFromViewPT();
            if (ma.equalsIgnoreCase(pt.getMa()) && ten.equalsIgnoreCase(pt.getTen())) {
                if (checkDataPT()) {
                    servicePT.update(pt, id);
                    listPT = servicePT.getAll();
                    dtm = (DefaultTableModel) tblListPT.getModel();
                    showDataTablePT(listPT);
                }
            } else if (!ma.equalsIgnoreCase(pt.getMa())) {
                if (checkDataPT()) {
                    if (checkMaPT()) {
                        servicePT.update(pt, id);
                        listPT = servicePT.getAll();
                        dtm = (DefaultTableModel) tblListPT.getModel();
                        showDataTablePT(listPT);
                    }
                }
            } else if (!ten.equalsIgnoreCase(pt.getTen())) {
                if (checkDataPT()) {
                    if (checkTenPT()) {
                        servicePT.update(pt, id);
                        listPT = servicePT.getAll();
                        dtm = (DefaultTableModel) tblListPT.getModel();
                        showDataTablePT(listPT);
                    }
                }
            } else {
                if (checkDataPT()) {
                    if (checkMaPT()) {
                        if (checkTenPT()) {
                            servicePT.update(pt, id);
                            listPT = servicePT.getAll();
                            dtm = (DefaultTableModel) tblListPT.getModel();
                            showDataTablePT(listPT);
                        }
                    }
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!");
    }//GEN-LAST:event_btnSuaPTActionPerformed

    private void btnLamMoiPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiPTActionPerformed
        // TODO add your handling code here:
        txtMaPhong.setText("");
        txtTenPhong.setText("");
        cbLoaiPhong.setSelectedIndex(0);
        txtTang.setText("");
        rdoChuaSD.setSelected(true);
        txtMoTa.setText(null);
    }//GEN-LAST:event_btnLamMoiPTActionPerformed
    public void showDataTablePT(List<PhongTro> lists) {
        dtm.setRowCount(0);
        for (PhongTro pt : listPT) {
            dtm.addRow(pt.toDataRow());
        }
    }

    public void showDataTableLP(List<LoaiPhong> lists) {
        dtm.setRowCount(0);
        for (LoaiPhong lp : listLP) {
            dtm.addRow(lp.toDataRow());
        }
    }

    public void showComboBoxModel(List<String> listTTLP) {
        dcbm.removeAllElements();
        for (String s : listTTLP) {
            dcbm.addElement(s);
        }
    }

    public boolean checkDataLP() {
        if (txtMaLP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Loại Phòng không được để trống!");
            return false;
        } else if (txtTenLP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên Loại Phòng không được để trống!");
            return false;
        } else if (txtDienTich.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Diện Tích không được để trống!");
            return false;
        } else if (!checkNumber(txtDienTich.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá không được để trống!");
            return false;
        } else if (!checkNumber(txtGia.getText().trim().replace(".", ""))) {
            return false;
        } else if (txtGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá không được để trống!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkMaLP() {
        String ma = txtMaLP.getText().trim();
        for (String s : listMaLP) {
            if (ma.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Mã Loại Phòng đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    public boolean checkDataPT() {
        if (txtMaPhong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Phòng không được để trống!");
            return false;
        } else if (txtTenPhong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên Phòng không được để trống!");
            return false;
        } else if (txtTang.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tầng không được để trống!");
            return false;
        } else if (!checkNumber(txtTang.getText().trim())) {
            return false;
        } else {
            return true;
        }
    }

    public boolean checkMaPT() {
        String ma = txtMaPhong.getText().trim();
        for (String s : listMaPT) {
            if (ma.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Mã Phòng Trọ đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    public boolean checkTenPT() {
        String ten = txtTenPhong.getText().trim();
        for (String s : listTenPT) {
            if (ten.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Tên Phòng Trọ đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    public boolean checkNumber(String so) {
        String kyTu = "\\d+";
        if (so.matches(kyTu)) {
            if (Integer.valueOf(so) <= 0) {
                JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ!");
                return false;
            } else {
                return true;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ!");
            return false;
        }
    }

    public void detailLP(int index) {
        listLP = serviceLP.getAll();
        LoaiPhong lp = listLP.get(index);
        txtMaLP.setText(lp.getMa());
        txtTenLP.setText(lp.getTen());
        txtDienTich.setText(String.valueOf(lp.getDienTich()));
        txtGia.setText(String.valueOf(lp.getGia()));
    }

    public void detailPT(int index) {
        listPT = servicePT.getAll();
        PhongTro pt = listPT.get(index);
        txtMaPhong.setText(pt.getMa());
        txtTenPhong.setText(pt.getTen());
        cbLoaiPhong.setSelectedItem(servicePT.getTTLoaiPhongById(pt.getIdLoaiPhong()));
        txtTang.setText(pt.getTang());
        if (pt.isTrangThai() == true) {
            rdoDangSD.setSelected(true);
        } else {
            rdoChuaSD.setSelected(true);
        }
        txtMoTa.setText(pt.getMoTa());
    }

    private LoaiPhong getDataFromViewLP() {
        UUID id = UUID.randomUUID();
        String ma = txtMaLP.getText().trim();
        String ten = txtTenLP.getText().trim();
        String dt = txtDienTich.getText().trim();
        String gia = txtGia.getText().trim();
        return new LoaiPhong(String.valueOf(id), ma, ten, Float.valueOf(dt), Double.valueOf(gia));
    }

    private PhongTro getDataFromViewPT() {
        UUID id = UUID.randomUUID();
        String ma = txtMaPhong.getText().trim();
        String ten = txtTenPhong.getText().trim();
        String tang = txtTang.getText().trim();
        boolean tt = true;
        if (rdoChuaSD.isSelected()) {
            tt = false;
        }
        String moTa = txtMoTa.getText().trim();
        String idPT = servicePT.getIdByTTLoaiPhong(cbLoaiPhong.getSelectedItem().toString());
        return new PhongTro(String.valueOf(id), ma, ten, tang, tt, moTa, idPT);
    }

//    public List<LoaiPhong> timKiemLP(String tenLP) {
//        listLP = serviceLP.getAll();
//        List<LoaiPhong> listSearch = new ArrayList<>();
//        for (LoaiPhong lp : listLP) {
//            if (lp.getTen().contains(tenLP)) {
//                listSearch.add(lp);
//            }
//        }
//        return listSearch;
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhongTro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhongTro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhongTro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhongTro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyPhongTro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgTrangThai;
    private javax.swing.JButton btnLamMoiLP;
    private javax.swing.JButton btnLamMoiPT;
    private javax.swing.JButton btnSuaLP;
    private javax.swing.JButton btnSuaPT;
    private javax.swing.JButton btnThemLP;
    private javax.swing.JButton btnThemPT;
    private javax.swing.JComboBox<String> cbLoaiPhong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdoChuaSD;
    private javax.swing.JRadioButton rdoDangSD;
    private javax.swing.JTable tblListLP;
    private javax.swing.JTable tblListPT;
    private javax.swing.JTextField txtDienTich;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaLP;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtSearchLP;
    private javax.swing.JTextField txtSearchPT;
    private javax.swing.JTextField txtTang;
    private javax.swing.JTextField txtTenLP;
    private javax.swing.JTextField txtTenPhong;
    // End of variables declaration//GEN-END:variables
}
